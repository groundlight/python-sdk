# coding: utf-8

"""
    Groundlight API

    Groundlight makes it simple to understand images. You can easily create computer vision detectors just by describing what you want to know using natural language.

    The version of the OpenAPI document: 0.18.2
    Contact: support@groundlight.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from groundlight_openapi_client.models.get_detector_evaluation200_response_evaluation_results import (
    GetDetectorEvaluation200ResponseEvaluationResults,
)


class TestGetDetectorEvaluation200ResponseEvaluationResults(unittest.TestCase):
    """GetDetectorEvaluation200ResponseEvaluationResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetDetectorEvaluation200ResponseEvaluationResults:
        """Test GetDetectorEvaluation200ResponseEvaluationResults
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GetDetectorEvaluation200ResponseEvaluationResults`
        """
        model = GetDetectorEvaluation200ResponseEvaluationResults()
        if include_optional:
            return GetDetectorEvaluation200ResponseEvaluationResults(
                eval_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                total_ground_truth_examples = 56,
                total_labeled_examples = 56,
                kfold_pooled__balanced_accuracy = 1.337,
                kfold_pooled__positive_accuracy = 1.337,
                kfold_pooled__negative_accuracy = 1.337,
                precision__mean = 1.337,
                recall__mean = 1.337,
                roc_auc__mean = 1.337,
                balanced_system_accuracies = { },
                positive_system_accuracies = { },
                negative_system_accuracies = { },
                mean_absolute_error__mean = 1.337,
                objdet_precision__mean = 1.337,
                objdet_recall__mean = 1.337,
                objdet_f1_score__mean = 1.337,
                class_accuracies = { },
                confusion_dict = { },
                num_examples_per_class = { }
            )
        else:
            return GetDetectorEvaluation200ResponseEvaluationResults(
        )
        """

    def testGetDetectorEvaluation200ResponseEvaluationResults(self):
        """Test GetDetectorEvaluation200ResponseEvaluationResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
