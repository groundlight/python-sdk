openapi: 3.0.3
info:
  title: Groundlight API
  version: 0.18.2
  description: Groundlight makes it simple to understand images. You can easily create
    computer vision detectors just by describing what you want to know using natural
    language.
  contact:
    name: support@groundlight.ai
    email: support@groundlight.ai
paths:
  /v1/actions/detector/{detector_id}/rules:
    get:
      operationId: List detector rules
      description: List all rules for a detector
      parameters:
      - in: path
        name: detector_id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - actions
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRuleList'
          description: ''
    post:
      operationId: Create rule
      description: Create a new rule for a detector
      parameters:
      - in: path
        name: detector_id
        schema:
          type: string
        required: true
      tags:
      - actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RuleRequest'
        required: true
      security:
      - ApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: ''
  /v1/actions/rules:
    get:
      operationId: List rules
      description: Lists all rules over all detectors owned by the requester.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - actions
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRuleList'
          description: ''
  /v1/actions/rules/{id}:
    get:
      operationId: Get rule
      description: Retrieve a rule
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - actions
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: ''
    delete:
      operationId: Delete rule
      description: Delete a rule
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - actions
      security:
      - ApiToken: []
      responses:
        '204':
          description: No response body
  /v1/detector-groups:
    get:
      operationId: Get Detector Groups
      description: List all detector groups
      tags:
      - detector-groups
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DetectorGroup'
          description: ''
    post:
      operationId: Create Detector Group
      description: |-
        Create a new detector group

        POST data:
          Required:
            - name (str) - name of the predictor set
      tags:
      - detector-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectorGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DetectorGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DetectorGroupRequest'
        required: true
      security:
      - ApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectorGroup'
          description: ''
  /v1/detector-reset/{id}:
    delete:
      operationId: Reset detector
      description: Deletes all image queries on the detector
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - detector-reset
      security:
      - ApiToken: []
      responses:
        '204':
          description: No response body
  /v1/detectors:
    get:
      operationId: List detectors
      description: Retrieve a list of detectors.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: A page number within the paginated result set.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of items to return per page.
      tags:
      - detectors
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDetectorList'
          description: ''
    post:
      operationId: Create detector
      description: Create a new detector.
      tags:
      - detectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectorCreationInputRequest'
        required: true
      security:
      - ApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detector'
          description: ''
  /v1/detectors/{id}:
    get:
      operationId: Get detector
      description: Retrieve a detector by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Choose a detector by its ID.
        required: true
      tags:
      - detectors
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detector'
          description: ''
    patch:
      operationId: Update detector
      description: Update a detector
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - detectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDetectorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDetectorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDetectorRequest'
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detector'
          description: ''
    delete:
      operationId: Delete detector
      description: Delete a detector by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Choose a detector by its ID.
        required: true
      tags:
      - detectors
      security:
      - ApiToken: []
      responses:
        '204':
          description: No response body
  /v1/image-queries:
    get:
      operationId: List image queries
      description: Retrieve a list of image-queries.
      parameters:
      - in: query
        name: detector_id
        schema:
          type: string
        description: Optionally filter image queries by detector ID.
      - in: query
        name: page
        schema:
          type: integer
        description: A page number within the paginated result set.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of items to return per page.
      tags:
      - image-queries
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImageQueryList'
          description: ''
    post:
      operationId: Submit image query
      description: |2

        Submit an image query against a detector.

        You must use `"Content-Type: image/jpeg"` or similar (image/png, image/webp, etc) for the image data. For example:
        ```Bash
        $ curl https://api.groundlight.ai/device-api/v1/image-queries?detector_id=det_abc123 \
            --header "Content-Type: image/jpeg" \
            --data-binary @path/to/filename.jpeg
        ```
      parameters:
      - in: query
        name: confidence_threshold
        schema:
          type: number
          format: float
          minimum: 0
          maximum: 1
        description: The confidence threshold for the image query.
      - in: query
        name: detector_id
        schema:
          type: string
        description: Choose a detector by its ID.
        required: true
      - in: query
        name: human_review
        schema:
          type: string
        description: |-
          If set to `DEFAULT`, use the regular escalation logic (i.e., send the image query for human review if the ML model is not confident).
          If set to `ALWAYS`, always send the image query for human review even if the ML model is confident.
          If set to `NEVER`, never send the image query for human review even if the ML model is not confident.
      - in: query
        name: image_query_id
        schema:
          type: string
        description: The ID to assign to the created image query.
      - in: query
        name: inspection_id
        schema:
          type: string
        description: Associate the image query with an inspection.
      - in: query
        name: metadata
        schema:
          type: string
        description: A dictionary of custom key/value metadata to associate with the
          image query (limited to 1KB).
      - in: query
        name: patience_time
        schema:
          type: number
          format: float
        description: How long to wait for a confident response.
      - in: query
        name: want_async
        schema:
          type: string
        description: If "true" then submitting an image query returns immediately
          without a result. The result will be computed asynchronously and can be
          retrieved later.
      tags:
      - image-queries
      requestBody:
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
          image/jpg:
            schema:
              type: string
              format: binary
          image/png:
            schema:
              type: string
              format: binary
          image/gif:
            schema:
              type: string
              format: binary
          image/webp:
            schema:
              type: string
              format: binary
          image/bmp:
            schema:
              type: string
              format: binary
          image/x-icon:
            schema:
              type: string
              format: binary
      security:
      - ApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageQuery'
          description: ''
  /v1/image-queries/{id}:
    get:
      operationId: Get image query
      description: Retrieve an image-query by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Choose an image query by its ID.
        required: true
      tags:
      - image-queries
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageQuery'
          description: ''
  /v1/image-queries/{id}/image:
    get:
      operationId: Get image
      description: Retrieve an image by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Retrieve the image associated with the image query ID.
        required: true
      tags:
      - image-queries
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
          description: ''
  /v1/labels:
    post:
      operationId: create label
      description: |-
        Create a new LabelValue and attach it to an image query. This will trigger
        asynchronous fine-tuner model training.
      tags:
      - labels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelValueRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LabelValueRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LabelValueRequest'
        required: true
      security:
      - ApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelValue'
          description: ''
  /v1/me:
    get:
      operationId: Who am I
      description: Retrieve the current user.
      tags:
      - user
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: The user's username
          description: ''
  /v1/notes:
    get:
      operationId: get notes
      description: Retrieves all notes from a given detector and returns them in lists,
        one for each note_category.
      parameters:
      - in: query
        name: detector_id
        schema:
          type: string
        description: the detector whose notes to retrieve
        required: true
      tags:
      - notes
      security:
      - ApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllNotes'
          description: ''
    post:
      operationId: Create note
      description: Creates a new note.
      parameters:
      - in: query
        name: detector_id
        schema:
          type: string
        description: the detector to associate the new note with
        required: true
      tags:
      - notes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteRequest'
      security:
      - ApiToken: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AllNotes:
      type: object
      description: |-
        Serializes all notes for a given detector, grouped by type as listed in UserProfile.NoteCategoryChoices
        The fields must match whats in USERPROFILE.NoteCategoryChoices
      properties:
        CUSTOMER:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        GL:
          type: array
          items:
            $ref: '#/components/schemas/Note'
      required:
      - CUSTOMER
      - GL
    AnnotationsRequestedEnum:
      enum:
      - BINARY_CLASSIFICATION
      - BOUNDING_BOXES
      type: string
      description: |-
        * `BINARY_CLASSIFICATION` - Binary Classification
        * `BOUNDING_BOXES` - Bounding Boxes
    BBoxGeometry:
      type: object
      description: Mixin for serializers to handle data in the StrictBaseModel format
      properties:
        left:
          type: number
          format: double
        top:
          type: number
          format: double
        right:
          type: number
          format: double
        bottom:
          type: number
          format: double
        x:
          type: number
          format: double
          readOnly: true
        y:
          type: number
          format: double
          readOnly: true
      required:
      - bottom
      - left
      - right
      - top
      - x
      - y
    BBoxGeometryRequest:
      type: object
      description: Mixin for serializers to handle data in the StrictBaseModel format
      properties:
        left:
          type: number
          format: double
        top:
          type: number
          format: double
        right:
          type: number
          format: double
        bottom:
          type: number
          format: double
      required:
      - bottom
      - left
      - right
      - top
    BlankEnum:
      enum:
      - ''
    Condition:
      type: object
      properties:
        verb:
          $ref: '#/components/schemas/VerbEnum'
        parameters:
          type: object
          additionalProperties: {}
      required:
      - parameters
      - verb
    ConditionRequest:
      type: object
      properties:
        verb:
          $ref: '#/components/schemas/VerbEnum'
        parameters:
          type: object
          additionalProperties: {}
      required:
      - parameters
      - verb
    Detector:
      type: object
      description: Spec for serializing a detector object in the public API.
      properties:
        id:
          type: string
          readOnly: true
          description: A unique ID for this object.
        type:
          allOf:
          - $ref: '#/components/schemas/DetectorTypeEnum'
          readOnly: true
          description: The type of this object.
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: When this detector was created.
        name:
          type: string
          description: A short, descriptive name for the detector.
          maxLength: 200
        query:
          type: string
          description: A question about the image.
          readOnly: true
        group_name:
          type: string
          readOnly: true
          description: Which group should this detector be part of?
        confidence_threshold:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.9
          description: If the detector's prediction is below this confidence threshold,
            send the image query for human review.
        patience_time:
          type: number
          format: double
          maximum: 3600
          minimum: 0
          default: 30.0
          description: How long Groundlight will attempt to generate a confident prediction
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          description: Metadata about the detector.
        mode:
          allOf:
          - $ref: '#/components/schemas/ModeEnum'
          readOnly: true
        mode_configuration:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
        status:
          oneOf:
          - $ref: '#/components/schemas/StatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
        escalation_type:
          allOf:
          - $ref: '#/components/schemas/EscalationTypeEnum'
          description: |-
            Category that define internal proccess for labeling image queries

            * `STANDARD` - STANDARD
            * `NO_HUMAN_LABELING` - NO_HUMAN_LABELING
      required:
      - created_at
      - group_name
      - id
      - metadata
      - mode
      - mode_configuration
      - name
      - query
      - type
      x-internal: true
    DetectorCreationInputRequest:
      type: object
      description: Helper serializer for validating POST /detectors input.
      properties:
        name:
          type: string
          minLength: 1
          description: A short, descriptive name for the detector.
          maxLength: 200
        query:
          type: string
          minLength: 1
          description: A question about the image.
          maxLength: 300
        group_name:
          type: string
          minLength: 1
          description: Which group should this detector be part of?
          maxLength: 100
        confidence_threshold:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.9
          description: If the detector's prediction is below this confidence threshold,
            send the image query for human review.
        patience_time:
          type: number
          format: double
          maximum: 3600
          minimum: 0
          default: 30.0
          description: How long Groundlight will attempt to generate a confident prediction
        pipeline_config:
          type: string
          nullable: true
          description: (Advanced usage) Configuration needed to instantiate a prediction
            pipeline.
          maxLength: 100
        metadata:
          type: string
          minLength: 1
          description: Base64-encoded metadata for the detector. This should be a
            JSON object with string keys. The size after encoding should not exceed
            1362 bytes, corresponding to 1KiB before encoding.
          maxLength: 1362
        mode:
          allOf:
          - $ref: '#/components/schemas/ModeEnum'
          default: BINARY
          description: |-
            Mode in which this detector will work.

            * `BINARY` - BINARY
            * `COUNT` - COUNT
            * `MULTI_CLASS` - MULTI_CLASS
        mode_configuration:
          oneOf:
          - $ref: '#/components/schemas/CountModeConfiguration'
          - $ref: '#/components/schemas/MultiClassModeConfiguration'
          nullable: true
      required:
      - name
      - query
      x-internal: true
    DetectorGroup:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    DetectorGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - name
    DetectorTypeEnum:
      enum:
      - detector
      type: string
    EscalationTypeEnum:
      enum:
      - STANDARD
      - NO_HUMAN_LABELING
      type: string
      description: |-
        * `STANDARD` - STANDARD
        * `NO_HUMAN_LABELING` - NO_HUMAN_LABELING
    ImageQuery:
      type: object
      description: Spec for serializing a image-query object in the public API.
      properties:
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          description: Metadata about the image query.
        id:
          type: string
          readOnly: true
          description: A unique ID for this object.
        type:
          allOf:
          - $ref: '#/components/schemas/ImageQueryTypeEnum'
          readOnly: true
          description: The type of this object.
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: When was this detector created?
        query:
          type: string
          readOnly: true
          description: A question about the image.
        detector_id:
          type: string
          readOnly: true
          description: Which detector was used on this image query?
        result_type:
          allOf:
          - $ref: '#/components/schemas/ResultTypeEnum'
          readOnly: true
          description: What type of result are we returning?
        result:
          oneOf:
          - $ref: '#/components/schemas/BinaryClassificationResult'
          - $ref: '#/components/schemas/CountingResult'
          - $ref: '#/components/schemas/MultiClassificationResult'
          nullable: true
        patience_time:
          type: number
          format: double
          readOnly: true
          description: How long to wait for a confident response.
        confidence_threshold:
          type: number
          format: double
          readOnly: true
          description: Min confidence needed to accept the response of the image query.
        rois:
          type: array
          items:
            $ref: '#/components/schemas/ROI'
          readOnly: true
          nullable: true
          description: An array of regions of interest (bounding boxes) collected
            on image
        text:
          type: string
          nullable: true
          readOnly: true
          description: A text field on image query.
      required:
      - confidence_threshold
      - created_at
      - detector_id
      - id
      - metadata
      - patience_time
      - query
      - result
      - result_type
      - rois
      - text
      - type
      x-internal: true
    ImageQueryTypeEnum:
      enum:
      - image_query
      type: string
    LabelValue:
      type: object
      properties:
        confidence:
          type: number
          format: double
          nullable: true
          readOnly: true
        class_name:
          type: string
          nullable: true
          description: Return a human-readable class name for this label (e.g. YES/NO)
          readOnly: true
        rois:
          type: array
          items:
            $ref: '#/components/schemas/ROI'
          nullable: true
        annotations_requested:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/AnnotationsRequestedEnum'
            description: |-
              The type of annotation requested

              * `BINARY_CLASSIFICATION` - Binary Classification
              * `BOUNDING_BOXES` - Bounding Boxes
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        detector_id:
          type: integer
          nullable: true
          readOnly: true
        source:
          allOf:
          - $ref: '#/components/schemas/SourceEnum'
          readOnly: true
        text:
          type: string
          readOnly: true
          nullable: true
          description: Text annotations
      required:
      - annotations_requested
      - class_name
      - confidence
      - created_at
      - detector_id
      - source
      - text
    LabelValueRequest:
      type: object
      properties:
        label:
          type: string
          writeOnly: true
          minLength: 1
        image_query_id:
          type: string
          writeOnly: true
          minLength: 1
        rois:
          type: array
          items:
            $ref: '#/components/schemas/ROIRequest'
          nullable: true
      required:
      - image_query_id
      - label
    ModeEnum:
      enum:
      - BINARY
      - COUNT
      - MULTI_CLASS
      type: string
    Note:
      type: object
      properties:
        detector_id:
          type: string
          readOnly: true
        content:
          type: string
          nullable: true
          description: Text content of the note.
        is_pinned:
          type: boolean
          nullable: true
      required:
      - detector_id
    NoteRequest:
      type: object
      properties:
        content:
          type: string
          nullable: true
          description: Text content of the note.
        is_pinned:
          type: boolean
          nullable: true
        image:
          type: string
          format: binary
          writeOnly: true
          nullable: true
    PaginatedDetectorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Detector'
    PaginatedImageQueryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ImageQuery'
    PaginatedRuleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
    PatchedDetectorRequest:
      type: object
      description: Spec for serializing a detector object in the public API.
      properties:
        name:
          type: string
          minLength: 1
          description: A short, descriptive name for the detector.
          maxLength: 200
        confidence_threshold:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.9
          description: If the detector's prediction is below this confidence threshold,
            send the image query for human review.
        patience_time:
          type: number
          format: double
          maximum: 3600
          minimum: 0
          default: 30.0
          description: How long Groundlight will attempt to generate a confident prediction
        status:
          oneOf:
          - $ref: '#/components/schemas/StatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
        escalation_type:
          allOf:
          - $ref: '#/components/schemas/EscalationTypeEnum'
          description: |-
            Category that define internal proccess for labeling image queries

            * `STANDARD` - STANDARD
            * `NO_HUMAN_LABELING` - NO_HUMAN_LABELING
      x-internal: true
    ROI:
      type: object
      description: Mixin for serializers to handle data in the StrictBaseModel format
      properties:
        label:
          type: string
          description: The label of the bounding box.
        score:
          type: number
          format: double
          readOnly: true
          description: The confidence of the bounding box.
        geometry:
          $ref: '#/components/schemas/BBoxGeometry'
      required:
      - geometry
      - label
      - score
    ROIRequest:
      type: object
      description: Mixin for serializers to handle data in the StrictBaseModel format
      properties:
        label:
          type: string
          minLength: 1
          description: The label of the bounding box.
        geometry:
          $ref: '#/components/schemas/BBoxGeometryRequest'
      required:
      - geometry
      - label
    ResultTypeEnum:
      enum:
      - binary_classification
      - counting
      - multi_classification
      type: string
    Rule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        detector_id:
          type: string
          readOnly: true
        detector_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 44
        enabled:
          type: boolean
          default: true
        snooze_time_enabled:
          type: boolean
          default: false
        snooze_time_value:
          type: integer
          minimum: 0
          default: 0
        snooze_time_unit:
          allOf:
          - $ref: '#/components/schemas/SnoozeTimeUnitEnum'
          default: DAYS
        human_review_required:
          type: boolean
          default: false
        condition:
          $ref: '#/components/schemas/Condition'
        action:
          oneOf:
          - $ref: '#/components/schemas/Action'
          - $ref: '#/components/schemas/ActionList'
      required:
      - action
      - condition
      - detector_id
      - detector_name
      - id
      - name
    RuleRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 44
        enabled:
          type: boolean
          default: true
        snooze_time_enabled:
          type: boolean
          default: false
        snooze_time_value:
          type: integer
          minimum: 0
          default: 0
        snooze_time_unit:
          allOf:
          - $ref: '#/components/schemas/SnoozeTimeUnitEnum'
          default: DAYS
        human_review_required:
          type: boolean
          default: false
        condition:
          $ref: '#/components/schemas/ConditionRequest'
        action:
          oneOf:
          - $ref: '#/components/schemas/Action'
          - $ref: '#/components/schemas/ActionList'
      required:
      - action
      - condition
      - name
    SnoozeTimeUnitEnum:
      enum:
      - DAYS
      - HOURS
      - MINUTES
      - SECONDS
      type: string
      description: |-
        * `DAYS` - DAYS
        * `HOURS` - HOURS
        * `MINUTES` - MINUTES
        * `SECONDS` - SECONDS
    SourceEnum:
      enum:
      - INITIAL_PLACEHOLDER
      - CLOUD
      - CUST
      - HUMAN_CLOUD_ENSEMBLE
      - ALG
      - ALG_REC
      - ALG_UNCLEAR
      type: string
      description: |-
        * `INITIAL_PLACEHOLDER` - InitialPlaceholder
        * `CLOUD` - HumanCloud
        * `CUST` - HumanCustomer
        * `HUMAN_CLOUD_ENSEMBLE` - HumanCloudEnsemble
        * `ALG` - Algorithm
        * `ALG_REC` - AlgorithmReconciled
        * `ALG_UNCLEAR` - AlgorithmUnclear
    StatusEnum:
      enum:
      - 'ON'
      - 'OFF'
      type: string
      description: |-
        * `ON` - ON
        * `OFF` - OFF
    VerbEnum:
      enum:
      - ANSWERED_CONSECUTIVELY
      - ANSWERED_WITHIN_TIME
      - CHANGED_TO
      - NO_CHANGE
      - NO_QUERIES
      type: string
      description: |-
        * `ANSWERED_CONSECUTIVELY` - ANSWERED_CONSECUTIVELY
        * `ANSWERED_WITHIN_TIME` - ANSWERED_WITHIN_TIME
        * `CHANGED_TO` - CHANGED_TO
        * `NO_CHANGE` - NO_CHANGE
        * `NO_QUERIES` - NO_QUERIES
    BinaryClassificationResult:
      type: object
      properties:
        confidence:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
        source:
          type: string
          enum:
          - STILL_PROCESSING
          - CLOUD
          - USER
          - CLOUD_ENSEMBLE
          - ALGORITHM
        label:
          type: string
          enum:
          - 'YES'
          - 'NO'
          - UNCLEAR
      required:
      - label
    CountingResult:
      type: object
      properties:
        confidence:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
        source:
          type: string
          enum:
          - STILL_PROCESSING
          - CLOUD
          - USER
          - CLOUD_ENSEMBLE
          - ALGORITHM
        count:
          type: integer
          minimum: 0
        greater_than_max:
          type: boolean
      required:
      - count
    MultiClassificationResult:
      type: object
      properties:
        confidence:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
        source:
          type: string
          enum:
          - STILL_PROCESSING
          - CLOUD
          - USER
          - CLOUD_ENSEMBLE
          - ALGORITHM
        label:
          type: string
      required:
      - label
    CountModeConfiguration:
      type: object
      properties:
        max_count:
          type: integer
          minimum: 1
          maximum: 50
        class_name:
          type: string
      required:
      - class_name
    MultiClassModeConfiguration:
      type: object
      properties:
        class_names:
          type: array
          items:
            type: string
        num_classes:
          type: integer
      required:
      - class_names
    ChannelEnum:
      type: string
      enum:
      - TEXT
      - EMAIL
    Action:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/ChannelEnum'
        recipient:
          type: string
        include_image:
          type: boolean
      required:
      - channel
      - recipient
      - include_image
    ActionList:
      type: array
      items:
        $ref: '#/components/schemas/Action'
  securitySchemes:
    ApiToken:
      name: x-api-token
      type: apiKey
      in: header
servers:
- url: https://api.groundlight.ai/device-api
  description: Prod
- url: https://api.integ.groundlight.ai/device-api
  description: Integ
- url: https://device.positronix.ai/device-api
  description: Device Prod
- url: https://device.integ.positronix.ai/device-api
  description: Device Integ
