"use strict";(self.webpackChunkcode_groundlight_ai=self.webpackChunkcode_groundlight_ai||[]).push([[4451],{8090:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"other-ways-to-use/stream-processor","title":"Low-Code Stream Processor","description":"The Groundlight Stream Processor is a simple containerized application for processing video streams and submitting frames to Groundlight.","source":"@site/docs/other-ways-to-use/1-stream-processor.md","sourceDirName":"other-ways-to-use","slug":"/other-ways-to-use/stream-processor","permalink":"/python-sdk/docs/other-ways-to-use/stream-processor","draft":false,"unlisted":false,"editUrl":"https://github.com/groundlight/python-sdk/tree/main/docs/docs/other-ways-to-use/1-stream-processor.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"API Reference","permalink":"/python-sdk/docs/api-reference/"},"next":{"title":"No-Code deployment on an ESP32 Camera Board","permalink":"/python-sdk/docs/other-ways-to-use/esp32cam"}}');var t=n(4848),o=n(8453);const i={},a="Low-Code Stream Processor",d={},c=[{value:"Prerequisites:",id:"prerequisites",level:2},{value:"Create a Detector via the Groundlight Dashboard",id:"create-a-detector-via-the-groundlight-dashboard",level:2},{value:"Processing a Stream",id:"processing-a-stream",level:2},{value:"Combining with Groundlight Alerts",id:"combining-with-groundlight-alerts",level:2}];function l(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"low-code-stream-processor",children:"Low-Code Stream Processor"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.a,{href:"https://github.com/groundlight/stream",children:"Groundlight Stream Processor"})," is a simple containerized application for processing video streams and submitting frames to Groundlight."]}),"\n",(0,t.jsx)(r.p,{children:"It supports a variety of input sources, including:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Video devices (webcams)"}),"\n",(0,t.jsx)(r.li,{children:"Video files (MP4, etc)"}),"\n",(0,t.jsx)(r.li,{children:"RTSP streams"}),"\n",(0,t.jsx)(r.li,{children:"HLS streams"}),"\n",(0,t.jsx)(r.li,{children:"YouTube videos"}),"\n",(0,t.jsx)(r.li,{children:"Image directories"}),"\n",(0,t.jsx)(r.li,{children:"Image URLs"}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["The Stream Processor can be combined with ",(0,t.jsx)(r.a,{href:"/python-sdk/docs/guide/alerts",children:"Groundlight Alerts"})," to create a simple video analytics system. For example, you could use the Stream Processor to process a video stream from a security camera and send an alert when a person is detected."]}),"\n",(0,t.jsx)(r.h2,{id:"prerequisites",children:"Prerequisites:"}),"\n",(0,t.jsx)(r.p,{children:"You will need:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["A ",(0,t.jsx)(r.a,{href:"https://dashboard.groundlight.ai/",children:"Groundlight account"})]}),"\n",(0,t.jsxs)(r.li,{children:["An API token from the ",(0,t.jsx)(r.a,{href:"https://dashboard.groundlight.ai/reef/my-account/api-tokens",children:"Groundlight dashboard"})]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://www.docker.com/",children:"Docker"})," installed on your system"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Set your Groundlight API token as an environment variable:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'export GROUNDLIGHT_API_TOKEN="<your-api-token>"\n'})}),"\n",(0,t.jsx)(r.h2,{id:"create-a-detector-via-the-groundlight-dashboard",children:"Create a Detector via the Groundlight Dashboard"}),"\n",(0,t.jsxs)(r.p,{children:["Once signed in to ",(0,t.jsx)(r.a,{href:"https://dashboard.groundlight.ai/",children:"the Groundlight dashboard"}),', create a new detector by clicking the "Create New" button. Give your detector a name, a question, and a confidence threshold, then click "Save."']}),"\n",(0,t.jsx)(r.p,{children:"You will be redirected to the detector's page, where you can find the detector ID under the Setup tab. Note this ID for later use."}),"\n",(0,t.jsx)(r.h2,{id:"processing-a-stream",children:"Processing a Stream"}),"\n",(0,t.jsx)(r.p,{children:"Processing a stream is as easy as running a Docker container. For example, the following command will process a video file:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'docker run -v /path/to/video:/videos groundlight/stream \\\n    -t "$GROUNDLIGHT_API_TOKEN" \\\n    -d \u201c<your-detector-id>\u201d \\\n    -s /videos/video.mp4 \\\n    -f 1\n'})}),"\n",(0,t.jsxs)(r.p,{children:["This will begin submitting frames from the video file to Groundlight. The ",(0,t.jsx)(r.code,{children:"-f"})," flag specifies the frame rate in terms of frames per second. The container can be stopped by pressing ",(0,t.jsx)(r.code,{children:"Ctrl+C"}),"."]}),"\n",(0,t.jsx)(r.p,{children:"A variety of input sources are supported, including RTSP streams. To process an RTSP stream, run the following command:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'docker run groundlight/stream \\\n    -t "$GROUNDLIGHT_API_TOKEN" \\\n    -d \u201c<your-detector-id>\u201d \\\n    -s "<your-rtsp-url>" \\\n    -f 0.5 \\\n    -v\n'})}),"\n",(0,t.jsxs)(r.p,{children:["This will begin submitting frames from the RTSP stream to Groundlight. The ",(0,t.jsx)(r.code,{children:"-v"})," flag enables verbose logging."]}),"\n",(0,t.jsxs)(r.p,{children:["If you only wish to submit frames to Groundlight when there is motion detected in the video stream, you can add the ",(0,t.jsx)(r.code,{children:"-m"})," flag:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'docker run groundlight/stream \\\n    -t "$GROUNDLIGHT_API_TOKEN" \\\n    -d \u201c<your-detector-id>\u201d \\\n    -s "<your-rtsp-url>" \\\n    -f 2 \\\n    -m\n'})}),"\n",(0,t.jsxs)(r.p,{children:["You may want the container to run in the background. To do this, add the ",(0,t.jsx)(r.code,{children:"--detach"})," flag to the ",(0,t.jsx)(r.code,{children:"docker run"})," command:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'docker run --detach groundlight/stream \\\n    -t "$GROUNDLIGHT_API_TOKEN" \\\n    -d \u201c<your-detector-id>\u201d \\\n    -s "<your-rtsp-url>" \\\n    -f 2 \\\n    -m\n'})}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsx)(r.p,{children:"The Groundlight Stream Processor is lightweight and can be run on a Raspberry Pi or other low-power devices."})}),"\n",(0,t.jsx)(r.h2,{id:"combining-with-groundlight-alerts",children:"Combining with Groundlight Alerts"}),"\n",(0,t.jsx)(r.p,{children:"The Stream Processor submits frames to Groundlight, but it does not do anything with the results."}),"\n",(0,t.jsxs)(r.p,{children:["In order to build a useful alerting system, you can combine the Stream Processor with ",(0,t.jsx)(r.a,{href:"/python-sdk/docs/guide/alerts",children:"Groundlight Alerts"}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var s=n(6540);const t={},o=s.createContext(t);function i(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);