"use strict";(self.webpackChunkcode_groundlight_ai=self.webpackChunkcode_groundlight_ai||[]).push([[7383],{7338:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"answer-modes/binary-detectors","title":"Binary Classification Detectors","description":"Binary classification detectors are used to answer yes/no questions about images. Most of Groundlight\'s documentation examples are for binary classification detectors, as they are the simplest type of detector.","source":"@site/docs/answer-modes/1-binary-detectors.md","sourceDirName":"answer-modes","slug":"/answer-modes/binary-detectors","permalink":"/python-sdk/docs/answer-modes/binary-detectors","draft":false,"unlisted":false,"editUrl":"https://github.com/groundlight/python-sdk/tree/main/docs/docs/answer-modes/1-binary-detectors.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Detector Answer Modes","permalink":"/python-sdk/docs/answer-modes/"},"next":{"title":"Multiple Choice (Choose One) Detectors","permalink":"/python-sdk/docs/answer-modes/multi-choice-detectors"}}');var r=n(4848),o=n(8453);const a={},s="Binary Classification Detectors",c={},d=[{value:"Submit an Image Query to a Binary Classification Detector",id:"submit-an-image-query-to-a-binary-classification-detector",level:2},{value:"Add a label to a Binary Classification Detector",id:"add-a-label-to-a-binary-classification-detector",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"binary-classification-detectors",children:"Binary Classification Detectors"})}),"\n",(0,r.jsx)(t.p,{children:"Binary classification detectors are used to answer yes/no questions about images. Most of Groundlight's documentation examples are for binary classification detectors, as they are the simplest type of detector."}),"\n",(0,r.jsx)(t.p,{children:'In order to create a binary classification detector, you need to provide a query that asks a yes/no question. For example, "Is there an eagle visible?" or "Is the door fully closed?".'}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\ngl = Groundlight()\n\n# highlight-start\ndetector = gl.create_detector(\n    name="eagle-detector",\n    query="Is there an eagle visible?",\n    confidence_threshold=0.9,\n)\n# highlight-end\n'})}),"\n",(0,r.jsx)(t.h2,{id:"submit-an-image-query-to-a-binary-classification-detector",children:"Submit an Image Query to a Binary Classification Detector"}),"\n",(0,r.jsx)(t.p,{children:"Now that you have created a binary classification detector, you can submit an image query to it."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\ngl = Groundlight()\n\ndetector = gl.get_detector_by_name("eagle-detector")\n\n# highlight-start\n# Check if an eagle is visible in an image\nimage_query = gl.submit_image_query(detector, "path/to/image.jpg")\n# highlight-end\n\nprint(f"Result: {image_query.result.label}")\nprint(f"Confidence: {image_query.result.confidence}")\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Binary classification detectors return a ",(0,r.jsx)(t.code,{children:"label"})," attribute in the result object, which will be either ",(0,r.jsx)(t.code,{children:'"YES"'})," or ",(0,r.jsx)(t.code,{children:'"NO"'}),". If a query is ambiguous, it is also possible for the detector to return an ",(0,r.jsx)(t.code,{children:'"UNCLEAR"'})," label."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"confidence"})," attribute represents the confidence level in the predicted label, which (for a binary classification detector) is a value between 0.5 and 1. A higher confidence score indicates that the model is more certain about its prediction."]}),"\n",(0,r.jsx)(t.h2,{id:"add-a-label-to-a-binary-classification-detector",children:"Add a label to a Binary Classification Detector"}),"\n",(0,r.jsxs)(t.p,{children:["To provide ground truth labels for binary classification detectors, you can specify the label as either ",(0,r.jsx)(t.code,{children:'"YES"'}),", ",(0,r.jsx)(t.code,{children:'"NO"'}),", or ",(0,r.jsx)(t.code,{children:'"UNCLEAR"'}),". This helps improve the accuracy of your detector over time."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\ngl = Groundlight()\n\n# highlight-start\n# Add a binary label to the image query from the previous example\ngl.add_label(image_query, label="YES")\n# highlight-end\n'})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(6540);const r={},o=i.createContext(r);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);