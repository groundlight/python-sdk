"use strict";(self.webpackChunkcode_groundlight_ai=self.webpackChunkcode_groundlight_ai||[]).push([[468],{7953:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"guide/submitting-image-queries","title":"Submitting Image Queries","description":"Once you have created a Detector and captured an image, you can submit your image to Groundlight for analysis.","source":"@site/docs/guide/4-submitting-image-queries.md","sourceDirName":"guide","slug":"/guide/submitting-image-queries","permalink":"/python-sdk/docs/guide/submitting-image-queries","draft":false,"unlisted":false,"editUrl":"https://github.com/groundlight/python-sdk/tree/main/docs/docs/guide/4-submitting-image-queries.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Working with Detectors","permalink":"/python-sdk/docs/guide/working-with-detectors"},"next":{"title":"Setting Confidence Thresholds","permalink":"/python-sdk/docs/guide/managing-confidence"}}');var r=i(4848),s=i(8453);const a={},o="Submitting Image Queries",d={},l=[{value:"Submit an Image Query",id:"submit-an-image-query",level:2},{value:"Aliases for <code>submit_image_query</code>",id:"aliases-for-submit_image_query",level:2},{value:"Get the first confident answer",id:"get-the-first-confident-answer",level:3},{value:"Submit an ImageQuery asynchronously",id:"submit-an-imagequery-asynchronously",level:3},{value:"Get the first available answer, regardless of confidence",id:"get-the-first-available-answer-regardless-of-confidence",level:3},{value:"Working with Image Queries Post-Submission",id:"working-with-image-queries-post-submission",level:2},{value:"Retrieve an Image Query result",id:"retrieve-an-image-query-result",level:3},{value:"List your previous Image Queries",id:"list-your-previous-image-queries",level:3},{value:"Add a label to an Image Query",id:"add-a-label-to-an-image-query",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"submitting-image-queries",children:"Submitting Image Queries"})}),"\n",(0,r.jsxs)(t.p,{children:["Once you have ",(0,r.jsxs)(t.a,{href:"/python-sdk/docs/guide/working-with-detectors",children:["created a ",(0,r.jsx)(t.code,{children:"Detector"})]})," and ",(0,r.jsx)(t.a,{href:"/python-sdk/docs/guide/grabbing-images",children:"captured an image"}),", you can submit your image to Groundlight for analysis."]}),"\n",(0,r.jsxs)(t.p,{children:["The Groundlight SDK provides the ",(0,r.jsx)(t.code,{children:"submit_image_query"})," method which gives you full control over how you'd like your image to be processed. For convenience while getting started, there are a few aliases that capture common use cases."]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Method"}),(0,r.jsx)(t.th,{children:"Usage"}),(0,r.jsx)(t.th,{children:"Examples"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"ask_confident"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#get-the-first-confident-answer",children:"For users who want correct answers, waiting for humans to review if necessary"})}),(0,r.jsx)(t.td,{children:"Visual verification in safety applications"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"ask_ml"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#get-the-first-available-answer-regardless-of-confidence",children:"For users who need fast ML answers and cannot wait for human review"})}),(0,r.jsx)(t.td,{children:"Live facilities monitoring, machine tending"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"ask_async"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#submit-an-imagequery-asynchronously",children:"For users who want to bulk process images with no time constraint"})}),(0,r.jsx)(t.td,{children:"Warming up a detector with data from another ML platform, Collecting data in the field with the intent to analyze it tomorrow"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"submit_image_query"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#submit-an-image-query",children:"For advanced users who want more control than any of the aliased functions provide"})}),(0,r.jsx)(t.td,{children:"Submitting image queries with security requirements or using image query tags (available in our enterprise tier)"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"submit-an-image-query",children:"Submit an Image Query"}),"\n",(0,r.jsxs)(t.p,{children:["The primary method for submitting an image query is ",(0,r.jsx)(t.code,{children:"submit_image_query(detector: Detector, image: Any)"}),". This method takes a ",(0,r.jsx)(t.code,{children:"Detector"})," object and an image as input and returns an ",(0,r.jsx)(t.code,{children:"ImageQuery"})," object."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\n\ngl = Groundlight()\ndetector = gl.get_detector(id="det_abcdef...")\n\n# highlight-start\nimage_query = gl.submit_image_query(detector=detector, image="path/to/image.jpg")\n# highlight-end\n'})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"submit_image_query"})," provides fine-grained control over how the ",(0,r.jsx)(t.code,{children:"ImageQuery"})," is processed. For example, a per-query confidence threshold can be set (defaults to the ",(0,r.jsx)(t.code,{children:"Detector"}),"'s confidence threshold), and the query can be set to wait for up to a certain amount of time for a confident response (defaults to 30s). For example:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\n\ngl = Groundlight()\ndetector = gl.get_detector(id="det_abcdef...")\n\n# highlight-start\nimage_query = gl.submit_image_query(\n    detector=detector,\n    image="path/to/image.jpg",\n    confidence_threshold=0.95,\n    wait=10.0,  # seconds\n)\n# highlight-end\n'})}),"\n",(0,r.jsxs)(t.p,{children:["See the ",(0,r.jsx)(t.a,{href:"/python-sdk/docs/api-reference/",children:"API Reference"})," for more information on the ",(0,r.jsx)(t.code,{children:"submit_image_query"})," method."]}),"\n",(0,r.jsxs)(t.h2,{id:"aliases-for-submit_image_query",children:["Aliases for ",(0,r.jsx)(t.code,{children:"submit_image_query"})]}),"\n",(0,r.jsxs)(t.p,{children:["For convenience, the ",(0,r.jsx)(t.code,{children:"submit_image_query"})," method has aliases for the different patterns of usage. These aliases are ",(0,r.jsx)(t.code,{children:"ask_confident"}),", ",(0,r.jsx)(t.code,{children:"ask_ml"}),", and ",(0,r.jsx)(t.code,{children:"ask_async"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"get-the-first-confident-answer",children:"Get the first confident answer"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"ask_confident"})," evaluates an image with Groundlight waiting until an answer above the confidence threshold\nof the detector is reached or the wait period has passed."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\n\ngl = Groundlight()\ndetector = gl.get_detector(id="det_abcdef...")\n\n# highlight-start\nimage_query = gl.ask_confident(detector=detector, image="path/to/image.jpg")\n# highlight-end\n'})}),"\n",(0,r.jsx)(t.h3,{id:"submit-an-imagequery-asynchronously",children:"Submit an ImageQuery asynchronously"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"ask_async"})," is a convenience method for submitting an ",(0,r.jsx)(t.code,{children:"ImageQuery"})," asynchronously. This is equivalent to calling ",(0,r.jsx)(t.code,{children:"submit_image_query"})," with ",(0,r.jsx)(t.code,{children:"want_async=True"})," and ",(0,r.jsx)(t.code,{children:"wait=0"}),". Use ",(0,r.jsx)(t.code,{children:"get_image_query"})," to retrieve the ",(0,r.jsx)(t.code,{children:"result"})," of the ImageQuery."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\n\ngl = Groundlight()\ndetector = gl.get_detector(id="det_abcdef...")\n\n# highlight-start\n# Submit ImageQuery asynchronously\nimage_query = gl.ask_async(detector=detector, image="path/to/image.jpg")\n\n# Do other work while waiting for the result\nsleep(1.0)\n\n# Retrieve the result of the ImageQuery. Note that the provided\n# result can change over time - as the query is escalated through\n# our ladder - until a confident answer is reached.\nimage_query = gl.get_image_query(id=image_query.id)\n# highlight-end\n'})}),"\n",(0,r.jsxs)(t.p,{children:["See this ",(0,r.jsx)(t.a,{href:"/python-sdk/docs/guide/async-queries",children:"guide"})," for more information on ImageQueries submitted asynchronously."]}),"\n",(0,r.jsx)(t.h3,{id:"get-the-first-available-answer-regardless-of-confidence",children:"Get the first available answer, regardless of confidence"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"ask_ml"})," evaluates an image with Groundlight and returns the first answer Groundlight can provide, agnostic of confidence. There is no wait period when using this method. It is called ",(0,r.jsx)(t.code,{children:"ask_ml"})," because our machine learning models are earliest on our escalation ladder and thus always the fastest to respond."]}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["We recommend using the ",(0,r.jsx)(t.code,{children:"ask_confident"})," or the ",(0,r.jsx)(t.code,{children:"ask_async"})," methods whenever possible for best results."]})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\n\ngl = Groundlight()\ndetector = gl.get_detector(id="det_abcdef...")\n\n# highlight-start\nimage_query = gl.ask_ml(detector=detector, image="path/to/image.jpg")\n# highlight-end\n'})}),"\n",(0,r.jsx)(t.p,{children:"When using this method, low-confidence Image Queries will still be escalated to human review - this allows our models to continue to improve over time."}),"\n",(0,r.jsx)(t.h2,{id:"working-with-image-queries-post-submission",children:"Working with Image Queries Post-Submission"}),"\n",(0,r.jsx)(t.h3,{id:"retrieve-an-image-query-result",children:"Retrieve an Image Query result"}),"\n",(0,r.jsxs)(t.p,{children:["In practice, you may want to check for a new result on your query. For example, after a cloud reviewer labels your query. For example, you can use the ",(0,r.jsx)(t.code,{children:"image_query.id"})," after the above ",(0,r.jsx)(t.code,{children:"submit_image_query()"})," call."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\n\ngl = Groundlight()\n\n# highlight-start\nimage_query = gl.get_image_query(id="iq_YOUR_IMAGE_QUERY_ID")\n# highlight-end\n'})}),"\n",(0,r.jsx)(t.h3,{id:"list-your-previous-image-queries",children:"List your previous Image Queries"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"from groundlight import Groundlight\n\ngl = Groundlight()\n\n# highlight-start\n# Defaults to 10 results per page\nimage_queries = gl.list_image_queries()\n\n# Pagination: 1st page of 5 results per page\nimage_queries = gl.list_image_queries(page=1, page_size=5)\n# highlight-end\n"})}),"\n",(0,r.jsx)(t.h3,{id:"add-a-label-to-an-image-query",children:"Add a label to an Image Query"}),"\n",(0,r.jsx)(t.p,{children:"Groundlight lets you start using models by making queries against your very first image, but there are a few situations where you might either have an existing dataset, or you'd like to handle the escalation response programatically in your own code but still include the label to get better responses in the future."}),"\n",(0,r.jsxs)(t.p,{children:["With your ",(0,r.jsx)(t.code,{children:"ImageQuery"})," from either ",(0,r.jsx)(t.code,{children:"submit_image_query()"})," or ",(0,r.jsx)(t.code,{children:"get_image_query()"})," you can add the label directly. Note that if the query is already in the escalation queue due to low ML confidence or audit thresholds, it may also receive labels from another source. However, user-provided labels are always treated as the most authoritative."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests\nfrom PIL import Image\nfrom groundlight import Groundlight\n\ngl = Groundlight()\n\nd = gl.get_or_create_detector(name="doorway", query="Is the doorway open?")\n\nimage_url= "https://images.selfstorage.com/large-compress/2174925f24362c479b2.jpg"\nimage = Image.open(requests.get(image_url, stream=True).raw)\nimage_query = gl.submit_image_query(detector=d, image=image)\n\n# highlight-start\ngl.add_label(image_query, \'YES\')  # or \'NO\'\n# highlight-end\n'})})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>o});var n=i(6540);const r={},s=n.createContext(r);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);